- defaults:
    link:
      relink: true
      create: true

- clean:
    - "~"
    - ~/.config/kitty/
    - ~/.config/awesome/
    - ~/.config/direnv/
    - ~/.config/nvim/

- ifarch:
    - git:
        "~/yay":
          url: https://aur.archlinux.org/yay.git

    - shell:
        - [cd ~/yay && makepkg -si --noconfirm, "Install yay"]
        - [rm -rf ~/yay, "Remove yay git clone"]

    - yay:
        - direnv
        - dotnet-sdk
        - flameshot
        - kitty
        - kitty-terminfo
        - light-locker
        - neovim
        - playerctl
        - ripgrep
        - tmux
        - zsh
        - python-pip
        - thefuck
        - hushboard-git
        - yad
        - xdotool
        - cbatticon
        - fzf
        - mate-polkit

        - noto-fonts-emoji
        - ttf-roboto
        - ttf-font-awesome
        - otf-font-awesome

- link:
    ~/.tmux.conf: tmux.conf
    ~/.aliases: aliases
    ~/.gitconfig: gitconfig
    ~/.zprofile: zprofile
    ~/.config/kitty: kitty
    ~/.xinitrc: xinitrc
    ~/.zshrc: zshrc
    ~/.config/nvim: nvim
    ~/.config/composer/composer.json: composer.json
    ~/.config/ripgreprc: ripgreprc
    ~/.config/direnv: direnv
    ~/.config/awesome: awesome
    ~/.config/pypoetry/config.toml: pypoetry.toml
    ~/.config/libvirt/libvirt.conf: libvirt.conf
    ~/.ackrc: ackrc
    ~/.gitignore: gitignore
    ~/.config/ulauncher: ulauncher
    ~/.config/polybar: polybar
    ~/.config/autorandr/postswitch: autorandr/postswitch
    ~/.config/fontconfig: fontconfig
    ~/.config/picom/picom.conf: picom.conf
    ~/.config/hypr: hypr
    ~/.config/waybar: waybar

    ~/.local/share/fonts/WifiFont.ttf: fonts/DejaVuSansMono-wifi-ramp.ttf

- git:
    "~/.asdf":
      url: https://github.com/asdf-vm/asdf.git
      branch: v0.12.0

- asdf:
    - asdf_path: ~/.asdf/asdf.sh
    - plugin: python
      versions:
        - latest
      global: system
    - plugin: nodejs
      versions:
        - latest
        - 1.2.0b1
      global: 1.2.0b1

- shell: ["pip install --user pipx --break-system-packages", "Install pipx"]

- pipx:
    file: requirements-pipx.txt
    binary: ~/.local/bin/pipx
    stdout: true
    stderr: true

- shell:
    - [
        'if [ ! -d ~/.oh-my-zsh ]; then sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended --keep-zshrc; fi',
        Install ohmyzsh,
      ]

- git:
    "~/.oh-my-zsh/custom/plugins/zsh-autosuggestions":
      url: https://github.com/zsh-users/zsh-autosuggestions
    "~/.tmux/plugins/tpm":
      url: https://github.com/tmux-plugins/tpm

- shell:
    - [
        curl -sSL https://install.python-poetry.org | python3 - -p,
        Install poetry,
      ]
    - [
        "tmux new-session -d && tmux run '~/.tmux/plugins/tpm/scripts/install_plugins.sh' || true && tmux kill-session -t $(tmux ls -F '#{session_name}' | tail -n 1)",
        Install tmux plugins,
      ]
    - [nvim --headless '+Lazy! sync' +qa, Install vim plugins]
    - command: 'if [[ "$(echo $SHELL)" != "$(cat /etc/shells | grep zsh | tail -n 1)" ]]; then chsh -s $(cat /etc/shells | grep zsh | tail -n 1); fi'
      description: Switch to using zsh
      stdin: true
      stdout: true
      stderr: true
