- defaults:
    link:
      relink: true
      create: true

- clean:
    - "~"
    - ~/.config/kitty/
    - ~/.config/awesome/
    - ~/.config/direnv/
    - ~/.config/nvim/

- ifarch:
    - yaourt:
        - zsh
        - neovim
        - kitty
        - kitty-terminfo
        - ripgrep
        - asdf-vm
        - light-locker
        - playerctl
        - composer
        - flameshot
        - direnv
        - dotnet-sdk

- link:
    ~/.tmux.conf: tmux.conf
    ~/.aliases: aliases
    ~/.gitconfig: gitconfig
    ~/.zprofile: zprofile
    ~/.config/kitty: kitty
    ~/.xinitrc: xinitrc
    ~/.zshrc: zshrc
    ~/.config/nvim: nvim
    ~/.config/composer/composer.json: composer.json
    ~/.config/ripgreprc: ripgreprc
    ~/.config/direnv: direnv
    ~/.config/awesome: awesome
    ~/.config/pypoetry/config.toml: pypoetry.toml
    ~/.config/libvirt/libvirt.conf: libvirt.conf

- pip:
    file: requirements.txt
    binary: ~/.asdf/shims/pip
    user: true
    stdout: true
    stderr: true

- pipx:
    file: requirements-pipx.txt
    stdout: true
    stderr: true

- shell:
    - [git submodule update --init --recursive, Installing submodules]
    - [curl -sSL https://install.python-poetry.org | python3 - -p, Install poetry]
    - ["if [ ! -d ~/.oh-my-zsh ]; then sh -c '$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)' '' --unattended; fi", Install ohmyzsh]
    - [git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions || true, Install zsh-autosuggestions]
    - [git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm || true, Install tpm]
    - ["tmux new-session -d && tmux run '~/.tmux/plugins/tpm/scripts/install_plugins.sh' || true && tmux kill-session -t $(tmux ls -F '#{session_name}' | tail -n 1)", Install tmux plugins]
    - [curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim, Install Plug]
    - [dotnet tool install --global csharp-ls, "Install csharp-ls for coc csharp server"]
    - [nvim -f +'PlugInstall --sync' +'qa', Install vim plugins]
    - command: "if [[ $(echo $SHELL) != $(which zsh) ]]; then chsh -s $(which zsh); fi"
      description: Switch to using zsh
      stdin: true
      stdout: true
      stderr: true
    - [composer global install, "Install global composer modules"]
    - [~/.config/composer/vendor/bin/myweek, Install myweek hooks]

